git status [-s] 查看仓库状态 未跟踪文件 未暂存 已暂存 -s看简略信息
git diff  查看未暂存文件改变
git diff --staged  查看已暂存文件改变
git add [file-name]
git commit -m “comment”
git commit -a 更新文件跳过git add环节 提交所有已追踪文件
git commit --amend 代替上一次提交
git rm file
git rm --cached [file-name] 在仓库删除，在本地不删除
git mv [file-from-name] [file-to-name] 重命名 等于 mv [file-from-name] [file-to-name] git rm [file-from-name] git add [file-to-name]
git log 查看提交日志
git log -p -2 -p显示提交差异 -2显示最近两次提交
git log --stat 查看简略的提交统计
git log --pretty=oneline 一行显示
git log --oneline --decorate --graph --all 输出你的提交历史、各个分支的指向以及项目的分支分叉情况
git remote [-v] 查看已配置的远程仓库 -v查看仓库链接
git remote add <shortname> <url>  添加一个新的远程 Git 仓库，同时指定一个你可以轻松引用的简写
git fetch [remote-name] 拉取仓库中有但你没有的信息 它并不会自动合并或修改你当前的工作。 当准备好时你必须手动将其合并入你的工作。
git pull 自动的抓取然后合并远程分支到当前分支。
git clone 自动设置本地 master 分支跟踪克隆的远程仓库的 master 分支（或不管是什么名字的默认分支）
git push [remote-name] [branch-name] 将分支推送到服务器 先pull再push 否则会被拒绝
git remote show [remote-name] 会列出远程仓库的 URL 与跟踪分支的信息
git remote rename [remote-name] [new-name] 远程仓库的重命名
git remote rm [remote-name] 远程仓库的移除
git branch [branch-name] 在当前分支创建一个分支
git checkout [branch-name] 切换到另一分支
git checkout -b [branch-name] 创建并且切换
git merge [branch-name] 合并分支到当前分支
git branch -d [branch-name] 删除分支
git branch [-v] [-vv]查看所有分支 -v查看每个分支最后一次提交 *表示当前所在分支 
git branch --merged 查看已合并的分支 可删除
git branch --no-merged 查看未合并的分支 不可删除
git push origin --delete [branch-name] 删除远程分支
git config --global credential.helper cache --timeout <seconds> 缓存验证信息
git config --global credential.helper store --file <path> 明文保存验证信息

ssh-keygen -t rsa -C "xxxxxx@yy.com" 创建ssh公钥
git config --global user.name “your_username”  设置用户名
git config --global user.email “your_registered_github_Email”  设置邮箱地址(建议用注册giuhub的邮箱)